@model DinFlow.Models.Receita
@using DinFlow.Models

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Receita</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" class="form-control"
                   name="Valor"
                   value="@(Model.Valor.HasValue ? Model.Valor.Value.ToString("F2").Replace('.', ',') : "")"
                   placeholder="Digite o valor" />
            @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control", type = "date", value = Model.Data.ToString("yyyy-MM-dd") } })
            @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Categoria", htmlAttributes: new { @class = "control-label" })
        <div class="col-md-10" style="display: flex; align-items: center;">
            @Html.DropDownList("CategoriaId", ViewBag.Categorias as SelectList, "Selecione uma categoria...", new { @class = "form-control", id = "categoriaDropdownDespesa" })
            <button type="button" class="btn btn-success addCategoriaBtn">+</button>
        </div>
        @Html.ValidationMessage("CategoriaId", "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label>Tags</label>
        <div>
            @if (ViewBag.Tags != null)
            {
                foreach (var tag in ViewBag.Tags as List<DinFlow.Models.Tag>)
                {
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input"
                               name="SelectedTags"
                               value="@tag.Id"
                               @(Model.SelectedTags != null && Model.SelectedTags.Contains(tag.Id) ? "checked" : "") />
                        <label class="form-check-label">@tag.Nome</label>
                    </div>
                }
            }
        </div>
    </div>

    <div class="form-group" style="padding-top:10px; padding-right:10px">
        <div>
            <a class="btn btn-sm btn-outline-primary" title="Voltar" role="button" href="@Url.Action("Index")">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
            <input type="submit" value="Save" class="btn btn-sm btn-primary" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
