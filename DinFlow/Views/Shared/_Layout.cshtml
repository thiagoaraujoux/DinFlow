<!DOCTYPE html>
<html>

<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link href="@Url.Content("~/Content/layout.css")" rel="stylesheet" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - DinFlow</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>

<body>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-dark">
        <div class="container d-flex justify-content-between">
            <!-- Botão de toggle (menu mobile) com animação de hambúrguer -->
            <button id="menu-toggle" class="menu-toggle-btn navbar-toggler" title="Menu">
                <span class="menu-icon"></span>
                <span class="menu-icon"></span>
                <span class="menu-icon"></span>
            </button>

            @Html.ActionLink("DinFlow", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })

            <!-- Menu tradicional (visível em telas grandes) -->
            <div class="collapse navbar-collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li>@Html.ActionLink("Despesas", "Index", "Despesas", new { area = "" }, new { @class = "nav-link" })</li>
                    <li>@Html.ActionLink("Receitas", "Index", "Receitas", new { area = "" }, new { @class = "nav-link" })</li>
                    <li>@Html.ActionLink("Economias", "Index", "Economias", new { area = "" }, new { @class = "nav-link" })</li>
                </ul>
            </div>

            <!-- Perfis e Login (visível em telas grandes) -->
            <div class="d-flex align-items-center">
                @Html.Partial("_LoginPartial")
                @if (User.Identity.IsAuthenticated)
                {
                    <a href="@Url.Action("Logoff", "Account")" class="nav-link logoff-icon" title="Logoff">
                        <i class="bi bi-box-arrow-right"></i>
                    </a>
                }
                <!-- Botão de modo escuro -->
                <button id="theme-toggle" class="btn btn-outline-light" title="Modo Escuro">Modo Escuro</button>
            </div>
        </div>
    </nav>

    <div class="container body-content">
        @RenderBody()
        <hr />
    </div>

    <footer>
        <p>&copy; @DateTime.Now.Year - DinFlow (Desenvolvido por Thiago Araújo)</p>
        <p>
            <a href="@Url.Action("Contact", "Home")" class="footer-link">Contato</a> |
            <a href="@Url.Action("About", "Home")" class="footer-link">Sobre</a>
        </p>
    </footer>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <script>
        // Função para aplicar o modo escuro se estiver salvo no localStorage
        function applyDarkMode() {
            const theme = localStorage.getItem('theme');
            if (theme === 'dark') {
                document.body.classList.add('dark-mode');
                document.getElementById('theme-toggle').innerText = 'Modo Claro'; // Alterar o texto do botão
                // Adiciona uma classe ao navbar para mudar a cor
                document.querySelector('.navbar').classList.add('bg-dark');
            }
        }

        // Alternar tema claro/escuro
        function toggleDarkMode() {
            document.body.classList.toggle('dark-mode');
            const isDarkMode = document.body.classList.contains('dark-mode');
            document.getElementById('theme-toggle').innerText = isDarkMode ? 'Modo Claro' : 'Modo Escuro';
            localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');
            // Muda a cor da navbar dependendo do tema
            document.querySelector('.navbar').classList.toggle('bg-dark', isDarkMode);
            document.querySelector('.navbar').classList.toggle('bg-light', !isDarkMode);
        }

        // Chame a função ao carregar a página para aplicar a preferência salva
        document.addEventListener('DOMContentLoaded', applyDarkMode);

        // Menu toggle
        const menuToggle = document.getElementById('menu-toggle');
        const menuOverlay = document.getElementById('menu-overlay');
        const closeMenuBtn = document.querySelector('.close-menu-btn');

        if (menuToggle) {
            menuToggle.addEventListener('click', function () {
                menuOverlay.classList.toggle('show');
                this.classList.toggle('open'); // Alterna a classe para animação de hambúrguer
            });
        }

        // Fechar o menu overlay
        if (closeMenuBtn) {
            closeMenuBtn.addEventListener('click', function () {
                menuOverlay.classList.remove('show');
                menuToggle.classList.remove('open'); // Reseta o ícone de hambúrguer ao fechar
            });
        }

        // Event listeners for theme toggles
        document.getElementById('theme-toggle').addEventListener('click', toggleDarkMode);
    </script>
</body>

</html>
